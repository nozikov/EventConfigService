server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: event-config-service
  # Vault configuration
  cloud:
    vault:
      host: vault
      port: 8200
      scheme: http
      authentication: TOKEN
      token: root
      kv:
        enabled: true
        backend: secret
        default-context: ${spring.application.name}
        application-name: ${spring.application.name}
  config:
    import: optional:vault://
  datasource:
    # Database configuration using Vault-provided credentials
    # The URL is still hardcoded as it's not sensitive
    url: jdbc:postgresql://postgres:5432/event-db
    # These properties will be loaded from Vault if available, otherwise use defaults
    username: ${database.username:postgres}
    password: ${database.password:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.flexmind.eventconfigservice

springdoc:
  swagger-ui:
    path: /api/v1/docs/swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true
  api-docs:
    path: /api/v1/docs/api-docs

# Настройки webhook
webhook:
  retry-count: 3
  retry-delay-ms: 5000
  signature-header-name: X-Webhook-Signature
  signature-algorithm: HMAC-SHA256
  asyncapi-url: /api/v1/docs/event-webhook-asyncapi.yaml
