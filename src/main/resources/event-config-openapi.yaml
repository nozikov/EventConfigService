openapi: 3.0.1
info:
  title: Event Configurator API
  version: 1.0.0
  description: |
    Микросервис управления конфигурациями событий и подписками сторонних систем. 
    Поддерживает хранение конфигов, подписки, отправку webhook и работу с несколькими хранилищами.

    Webhook API описано в отдельной AsyncAPI-спецификации: [asyncapi.yaml](./asyncapi.yaml)
servers:
  - url: http://localhost:8080/api/v1
    description: API v1


tags:
  - name: EventConfig
    description: Управление конфигурациями событий
  - name: Subscription
    description: Управление подписками на события (webhook)
  - name: Notification
    description: Триггер уведомлений и тестирование webhook
  - name: UI
    description: Эндпоинты для UI

paths:
  /event-config:
    post:
      tags: [EventConfig]
      summary: Создать конфигурацию события
      operationId: createEventConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventConfigCreateRequest"
      responses:
        '201':
          description: Конфигурация создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventConfig"
        '400':
          $ref: "#/components/responses/BadRequest"
        '409':
          $ref: "#/components/responses/Conflict"
        '500':
          $ref: "#/components/responses/InternalError"
    get:
      tags: [EventConfig]
      summary: Получить список конфигураций с фильтрами
      operationId: getEventConfigList
      parameters:
        - $ref: "#/components/parameters/eventType"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/enabled"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
      responses:
        '200':
          description: Список конфигураций
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedEventConfigList"
        '500':
          $ref: "#/components/responses/InternalError"

  /event-config/{id}:
    put:
      tags: [EventConfig]
      summary: Обновить конфигурацию события
      operationId: updateEventConfig
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventConfigUpdateRequest"
      responses:
        '200':
          description: Конфигурация обновлена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventConfig"
        '400':
          $ref: "#/components/responses/BadRequest"
        '404':
          $ref: "#/components/responses/NotFound"
        '409':
          $ref: "#/components/responses/Conflict"
        '500':
          $ref: "#/components/responses/InternalError"

  /subscription:
    post:
      tags: [Subscription]
      summary: Создать webhook-подписку на событие
      operationId: createSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionCreateRequest"
      responses:
        '201':
          description: Подписка создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        '400':
          $ref: "#/components/responses/BadRequest"
        '409':
          $ref: "#/components/responses/Conflict"
        '500':
          $ref: "#/components/responses/InternalError"


  /ui/event-configs:
    get:
      tags: [UI]
      summary: Список конфигураций, сгруппированных по source (для UI)
      operationId: getGroupedEventConfigList
      responses:
        '200':
          description: Группировка конфигов по source
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupedEventConfigList"
        '500':
          $ref: "#/components/responses/InternalError"

  /webhook/settings:
    get:
      tags: [Subscription]
      summary: Получить настройки webhook интеграции
      operationId: getWebhookSettings
      responses:
        '200':
          description: Настройки webhook
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSettings"
        '500':
          $ref: "#/components/responses/InternalError"

components:
  parameters:
    id:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: Идентификатор объекта
    eventType:
      in: query
      name: eventType
      schema:
        type: string
      description: Тип события
    source:
      in: query
      name: source
      schema:
        type: string
      description: Источник события
    enabled:
      in: query
      name: enabled
      schema:
        type: boolean
      description: Статус активности
    page:
      in: query
      name: page
      schema:
        type: integer
        default: 0
        minimum: 0
      description: Номер страницы для пагинации
    size:
      in: query
      name: size
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      description: Размер страницы для пагинации

  responses:
    BadRequest:
      description: Некорректные данные запроса
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Conflict:
      description: Конфликт состояния данных
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    # Настройки webhook
    WebhookSettings:
      type: object
      properties:
        retryCount:
          type: integer
          description: Количество повторных попыток отправки webhook
          example: 3
        retryDelayMs:
          type: integer
          description: Задержка между повторными попытками (миллисекунды)
          example: 5000
        signatureHeaderName:
          type: string
          description: Имя заголовка для HMAC подписи
          example: "X-Webhook-Signature"
        signatureAlgorithm:
          type: string
          enum: ["HMAC-SHA256", "HMAC-SHA512"]
          description: Алгоритм подписи
          example: "HMAC-SHA256"
        asyncapiUrl:
          type: string
          description: URL к AsyncAPI спецификации webhook
          example: "/api/v1/docs/event-webhook-asyncapi.yaml"

    # Модель событий
    EventConfig:
      type: object
      required: [id, eventType, source, enabled, createdAt, updatedAt]
      properties:
        id:
          type: string
          format: uuid
          example: "cb5e2daf-b2d9-4868-98c5-dc1c50f441e7"
        eventType:
          type: string
          example: "USER_CREATED"
        source:
          type: string
          example: "crm"
        enabled:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    EventConfigCreateRequest:
      type: object
      required: [eventType, source, enabled]
      properties:
        eventType:
          type: string
          example: "USER_CREATED"
        source:
          type: string
          example: "crm"
        enabled:
          type: boolean
          example: true

    EventConfigUpdateRequest:
      type: object
      required: [eventType, source, enabled]
      properties:
        eventType:
          type: string
          example: "USER_UPDATED"
        source:
          type: string
          example: "crm"
        enabled:
          type: boolean
          example: false

    # Подписки
    Subscription:
      type: object
      required: [id, eventType, callbackUrl, active]
      properties:
        id:
          type: string
          format: uuid
        eventType:
          type: string
        callbackUrl:
          type: string
          format: uri
          example: "https://webhooks.example.com/events"
        active:
          type: boolean

    SubscriptionCreateRequest:
      type: object
      required: [eventType, callbackUrl, active]
      properties:
        eventType:
          type: string
        callbackUrl:
          type: string
          format: uri
        active:
          type: boolean

    # UI-эндпоинт: группировка по source
    GroupedEventConfigList:
      type: array
      items:
        type: object
        required: [source, configs]
        properties:
          source:
            type: string
            example: "crm"
          configs:
            type: array
            items:
              $ref: "#/components/schemas/EventConfig"

    # Для пагинации
    PagedEventConfigList:
      type: object
      required: [content, page, size, totalElements, totalPages]
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/EventConfig"
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer


    # Стандартная ошибка
    Error:
      type: object
      properties:
        code:
          type: string
          example: "BAD_REQUEST"
        message:
          type: string
        details:
          type: object
          additionalProperties: true